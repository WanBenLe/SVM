#install.packages("mco")
#install.packages("nsga2R")
timestart<-Sys.time()
library(mco)
library(nsga2R)
D_0<-c(-200,-400,150)/1000
C_0<-c(200,-450,155)/1000
S_0<-c(0,-750,100)/1000
P_0<-c(0,-600,150)/1000
J_0<-c(40,-500,650)/1000
H_0<-c(200,-400,300)/1000
I_0<-c(150,750,300)/1000
B_0<-c(100,-450,525)/1000
N_0<-c(250,-490,530)/1000
E_0<-c(40,-675,525)/1000
L_0<-c(0,-800,300)/1000
R_NB<-B_0-N_0
R_BE<-E_0-B_0
R_CD<-D_0-C_0
R_DS<-S_0-D_0
R_SE<-E_0-S_0
R_IE<-E_0-I_0
R_HI<-I_0-H_0
R_JP<-P_0-J_0
R_SL<-L_0-S_0
R_SI<-I_0-S_0
R_DP<-P_0-D_0
f1<-rep(0,3)
f2<-rep(0,3)
f3<-rep(0,3)
f5<-rep(0,3)
f6<-rep(0,3)
f7<-rep(0,3)
fun.cross<- function(a,b){
c<-c(a[2]*b[3]-b[2]*a[3],a[3]*b[1]-b[3]*a[1],a[1]*b[2]-b[1]*a[2])
return(c)
}
x<-function(x){
av1_temp<-x[1]*R_NB
VE<-fun.cross(av1_temp,R_BE)
av2_temp<-x[2]*R_CD
av3_temp<-c(x[3],x[4],x[5])
av4_temp<-c(x[6],x[7],x[8])
VS<-fun.cross(av2_temp,R_DS)
VSE<-fun.cross(av3_temp,R_SE)
VSI<-fun.cross(av3_temp,R_SI)
VI<-fun.cross(av4_temp,R_HI)
VIE<-fun.cross(av3_temp,R_IE)
VL<-c(x[9],x[10],x[11])
VSL<-fun.cross(av3_temp,R_SL)
AL<-c(x[12],0.247339866917719,0.3444531968456)
aa1_temp<-x[13]*R_NB
aa2_temp<-x[14]*R_CD
aa3_temp<-c(x[15],x[16],x[17])
aa4_temp<-c(x[18],x[19],x[20])
AE<-fun.cross(av1_temp,VE)+fun.cross(aa1_temp,R_BE)
AS<-fun.cross(av2_temp,VS)+fun.cross(aa2_temp,R_DS)
ASE<-fun.cross(av3_temp,VSE)+fun.cross(aa3_temp,R_SE)
ASI<-fun.cross(av3_temp,VSI)+fun.cross(aa3_temp,R_SI)
AI<-fun.cross(av4_temp,VI)+fun.cross(aa4_temp,R_HI)
ASL<-fun.cross(av3_temp,VSL)+fun.cross(aa3_temp,R_SL)
f1[1]<-VE[1]-VS[1]-VSE[1]
f1[2]<-VE[2]-VS[2]-VSE[2]
f1[3]<-VE[3]-VS[3]-VSE[3]
f2[1]<-VE[1]-VI[1]-VIE[1]
f2[2]<-VE[2]-VI[2]-VIE[2]
f2[3]<-VE[3]-VI[3]-VIE[3]
f3[1]<-VL[1]-VS[1]-VSL[1]
f3[2]<-VL[2]-VS[2]-VSL[2]
f3[3]<-VL[3]-VS[3]-VSL[3]
f5[1]<-AE[1]-AS[1]-ASE[1]
f5[2]<-AE[2]-AS[2]-ASE[2]
f5[3]<-AE[3]-AS[3]-ASE[3]
f6[1]<-AI[1]-AS[1]-ASI[1]
f6[2]<-AI[2]-AS[2]-ASI[2]
f6[3]<-AI[3]-AS[3]-ASI[3]
f7[1]<-AL[1]-AS[1]-ASL[1]
f7[2]<-AL[2]-AS[2]-ASL[2]
f7[3]<-AL[3]-AS[3]-ASL[3]
f4<-av4_temp%*%R_HI
f8<-aa4_temp%*%R_HI
return(c((f1[1])^2,(f1[2])^2,(f1[3])^2,(f2[1])^2,(f2[2])^2,(f2[3])^2,(f3[1])^2,(f3[2])^2,(f3[3])^2,(f4)^2,(f5[1])^2,(f5[2])^2,(f5[3])^2,(f6[1])^2,(f6[2])^2,(f6[3])^2,(f7[1])^2,(f7[2])^2,(f7[3])^2,(f8)^2))
}
results <- nsga2R(fn=x,varNo=20,objDim=20,lowerBounds = rep(-100,20), upperBounds = rep(100,20),
  popSize = 50, tourSize = 2, generations =1000, cprob = 0.7, XoverDistIdx = 5,
  mprob = 0.05, MuDistIdx = 10)
#fn最小化的目标函数
#varNo决策变量数
#objDim目标函数数
#lowerBounds每个决策变量的下界
#upperBounds每个决策变量的上界
#popSize总体规模
#tourSize竞争规模
#generations繁衍代数
#cprob交叉概率
#XoverDistIdx交叉参数,非负实数
#mprob变异概率
#MuDistIdx变异参数,非负实数
plot(results$objectives)
results$objectives[50,]
results$parameters[50,]
timeend<-Sys.time()
runningtime<-timeend-timestart
print(runningtime)